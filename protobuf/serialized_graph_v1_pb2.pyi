"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import custom_struct_v1_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Position(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y"]) -> None: ...

global___Position = Position

@typing.final
class Input(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    OPTIONAL_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: builtins.str
    optional: builtins.bool
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: builtins.str = ...,
        optional: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "optional", b"optional", "type", b"type"]) -> None: ...

global___Input = Input

@typing.final
class Output(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "type", b"type"]) -> None: ...

global___Output = Output

@typing.final
class Widget(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    OPTIONAL_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    optional: builtins.bool
    type: builtins.str
    @property
    def value(self) -> custom_struct_v1_pb2.CustomStruct:
        """varies widely"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        optional: builtins.bool = ...,
        type: builtins.str = ...,
        value: custom_struct_v1_pb2.CustomStruct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "optional", b"optional", "type", b"type", "value", b"value"]) -> None: ...

global___Widget = Widget

@typing.final
class Widgets(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Widget: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Widget | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Widget]: ...
    def __init__(
        self,
        *,
        items: collections.abc.Mapping[builtins.str, global___Widget] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["items", b"items"]) -> None: ...

global___Widgets = Widgets

@typing.final
class NodeData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    WIDGET_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Input]: ...
    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Output]: ...
    @property
    def widget(self) -> global___Widgets: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        inputs: collections.abc.Iterable[global___Input] | None = ...,
        outputs: collections.abc.Iterable[global___Output] | None = ...,
        widget: global___Widgets | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["widget", b"widget"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["inputs", b"inputs", "name", b"name", "outputs", b"outputs", "widget", b"widget"]) -> None: ...

global___NodeData = NodeData

@typing.final
class ComfyNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    POSITION_ABSOLUTE_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    id: builtins.str
    type: builtins.str
    width: builtins.int
    height: builtins.int
    @property
    def position(self) -> global___Position: ...
    @property
    def position_absolute(self) -> global___Position: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        type: builtins.str = ...,
        position: global___Position | None = ...,
        position_absolute: global___Position | None = ...,
        width: builtins.int = ...,
        height: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["position", b"position", "position_absolute", b"position_absolute"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["height", b"height", "id", b"id", "position", b"position", "position_absolute", b"position_absolute", "type", b"type", "width", b"width"]) -> None: ...

global___ComfyNode = ComfyNode

@typing.final
class ComfyEdge(google.protobuf.message.Message):
    """what is 'dragging' and 'selected'? not relevant for serialization
    for inputs and outputs, 'isHighlighted' is not needed
    'optional' should not exist inside of widgets.
    input.optional may not be needed?
    For edges, have the ID come higher
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    SOURCEHANDLE_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    TARGETHANDLE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    id: builtins.str
    source: builtins.str
    sourceHandle: builtins.str
    target: builtins.str
    targetHandle: builtins.str
    type: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        source: builtins.str = ...,
        sourceHandle: builtins.str = ...,
        target: builtins.str = ...,
        targetHandle: builtins.str = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "source", b"source", "sourceHandle", b"sourceHandle", "target", b"target", "targetHandle", b"targetHandle", "type", b"type"]) -> None: ...

global___ComfyEdge = ComfyEdge

@typing.final
class SerializedGraph(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GRAPH_ID_FIELD_NUMBER: builtins.int
    AUTHOR_ID_FIELD_NUMBER: builtins.int
    ANCESTOR_GRAPH_ID_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    NODES_FIELD_NUMBER: builtins.int
    EDGES_FIELD_NUMBER: builtins.int
    graph_id: builtins.str
    author_id: builtins.str
    ancestor_graph_id: builtins.str
    title: builtins.str
    description: builtins.str
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComfyNode]: ...
    @property
    def edges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComfyEdge]: ...
    def __init__(
        self,
        *,
        graph_id: builtins.str | None = ...,
        author_id: builtins.str | None = ...,
        ancestor_graph_id: builtins.str | None = ...,
        title: builtins.str | None = ...,
        description: builtins.str | None = ...,
        nodes: collections.abc.Iterable[global___ComfyNode] | None = ...,
        edges: collections.abc.Iterable[global___ComfyEdge] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_ancestor_graph_id", b"_ancestor_graph_id", "_author_id", b"_author_id", "_description", b"_description", "_graph_id", b"_graph_id", "_title", b"_title", "ancestor_graph_id", b"ancestor_graph_id", "author_id", b"author_id", "description", b"description", "graph_id", b"graph_id", "title", b"title"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_ancestor_graph_id", b"_ancestor_graph_id", "_author_id", b"_author_id", "_description", b"_description", "_graph_id", b"_graph_id", "_title", b"_title", "ancestor_graph_id", b"ancestor_graph_id", "author_id", b"author_id", "description", b"description", "edges", b"edges", "graph_id", b"graph_id", "nodes", b"nodes", "title", b"title"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_ancestor_graph_id", b"_ancestor_graph_id"]) -> typing.Literal["ancestor_graph_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_author_id", b"_author_id"]) -> typing.Literal["author_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_description", b"_description"]) -> typing.Literal["description"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_graph_id", b"_graph_id"]) -> typing.Literal["graph_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_title", b"_title"]) -> typing.Literal["title"] | None: ...

global___SerializedGraph = SerializedGraph
