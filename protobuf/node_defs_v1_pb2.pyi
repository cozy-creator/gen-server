"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import custom_struct_v1_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class NodeDefRequest(google.protobuf.message.Message):
    """====== Node Definition Messages ======

    Specify subset of fully qualified extension names, to load their node defs
    Leave empty to retrieve all node definitions
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXTENSION_IDS_FIELD_NUMBER: builtins.int
    @property
    def extension_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        extension_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["extension_ids", b"extension_ids"]) -> None: ...

global___NodeDefRequest = NodeDefRequest

@typing.final
class NodeDefinition(google.protobuf.message.Message):
    """Input specs are used for to populate input-widgets. Example:
    number: min / max / step values for a number
    string: multiline: true / false
    or 'default' for any value really
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class UXWidget(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        WIDGET_TYPE_FIELD_NUMBER: builtins.int
        SPEC_FIELD_NUMBER: builtins.int
        widget_type: builtins.str
        @property
        def spec(self) -> custom_struct_v1_pb2.CustomStruct: ...
        def __init__(
            self,
            *,
            widget_type: builtins.str = ...,
            spec: custom_struct_v1_pb2.CustomStruct | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["spec", b"spec"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["spec", b"spec", "widget_type", b"widget_type"]) -> None: ...

    @typing.final
    class InputDef(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        EDGE_TYPE_FIELD_NUMBER: builtins.int
        REQUIRED_FIELD_NUMBER: builtins.int
        UX_WIDGETS_FIELD_NUMBER: builtins.int
        key: builtins.str
        """used to refer to it, like 'node_name.inputs.key' in a workflow"""
        display_name: builtins.str
        """e.g., "Positive Conditioning" """
        edge_type: builtins.str
        required: builtins.bool
        @property
        def ux_widgets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeDefinition.UXWidget]: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            display_name: builtins.str = ...,
            edge_type: builtins.str = ...,
            required: builtins.bool | None = ...,
            ux_widgets: collections.abc.Iterable[global___NodeDefinition.UXWidget] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["_required", b"_required", "required", b"required"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["_required", b"_required", "display_name", b"display_name", "edge_type", b"edge_type", "key", b"key", "required", b"required", "ux_widgets", b"ux_widgets"]) -> None: ...
        def WhichOneof(self, oneof_group: typing.Literal["_required", b"_required"]) -> typing.Literal["required"] | None: ...

    @typing.final
    class OutputDef(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        EDGE_TYPE_FIELD_NUMBER: builtins.int
        UX_WIDGETS_FIELD_NUMBER: builtins.int
        key: builtins.str
        display_name: builtins.str
        edge_type: builtins.str
        @property
        def ux_widgets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeDefinition.UXWidget]: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            display_name: builtins.str = ...,
            edge_type: builtins.str = ...,
            ux_widgets: collections.abc.Iterable[global___NodeDefinition.UXWidget] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["display_name", b"display_name", "edge_type", b"edge_type", "key", b"key", "ux_widgets", b"ux_widgets"]) -> None: ...

    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    UX_WIDGETS_FIELD_NUMBER: builtins.int
    display_name: builtins.str
    description: builtins.str
    category: builtins.str
    """e.g., "latent/inpaint" """
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeDefinition.InputDef]:
        """maps do not guarantee order in protobuffers, but arrays do"""

    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeDefinition.OutputDef]: ...
    @property
    def ux_widgets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeDefinition.UXWidget]:
        """widgets associated with the node itself overall, e.g., "core.run" """

    def __init__(
        self,
        *,
        display_name: builtins.str = ...,
        description: builtins.str = ...,
        category: builtins.str = ...,
        inputs: collections.abc.Iterable[global___NodeDefinition.InputDef] | None = ...,
        outputs: collections.abc.Iterable[global___NodeDefinition.OutputDef] | None = ...,
        ux_widgets: collections.abc.Iterable[global___NodeDefinition.UXWidget] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["category", b"category", "description", b"description", "display_name", b"display_name", "inputs", b"inputs", "outputs", b"outputs", "ux_widgets", b"ux_widgets"]) -> None: ...

global___NodeDefinition = NodeDefinition

@typing.final
class NodeDefs(google.protobuf.message.Message):
    """The key is the fully-qualified class-type, such as `core.diffusion_denoiser`"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DefsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___NodeDefinition: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___NodeDefinition | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DEFS_FIELD_NUMBER: builtins.int
    @property
    def defs(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___NodeDefinition]: ...
    def __init__(
        self,
        *,
        defs: collections.abc.Mapping[builtins.str, global___NodeDefinition] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["defs", b"defs"]) -> None: ...

global___NodeDefs = NodeDefs
