[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "core-extension-1"
description = "Generative-AI server for content production"
version = "0.1.0"
authors = [{ name = "Paul Fidika", email = "paul@fidika.com" }]
dependencies = [
    "accelerate",
    "controlnet_aux",
    "gen_server",
    "groundingdino-py",
    "huggingface_hub",
    "image_utils",
    "mediapipe",
    "numpy",
    "Pillow",
    "requests",
    "scipy",
    "segment_anything",
    "spandrel",
    "torch",
    "tqdm",
    "transformers",
    "firebase-admin",
    "diffusers@git+https://github.com/huggingface/diffusers.git",
]

[project.entry-points."cozy_creator.architectures"]
sd1_text_encoder = "core_extension_1.architectures.sd1_archs:SD1TextEncoder"
sd1_unet = "core_extension_1.architectures.sd1_archs:SD1UNet"
sd1_vae = "core_extension_1.architectures.sd1_archs:SD1VAEArch"

sdxl_text_encoder_1 = "core_extension_1.architectures.sdxl_archs:SDXLTextEncoder"
sdxl_unet = "core_extension_1.architectures.sdxl_archs:SDXLUNet"

sd3_unet = "core_extension_1.architectures.sd3_archs:SD3UNet"
sd3_text_encoder_1 = "core_extension_1.architectures.sd3_archs:SD3TextEncoder1"
# sd3_text_encoder_2 = "core_extension_1.architectures.sd3_archs:SD3TextEncoder2"
sd3_text_encoder_3 = "core_extension_1.architectures.sd3_archs:SD3TextEncoder3"
sd3_vae = "core_extension_1.architectures.sd3_archs:SD3VAEArch"

vae = "core_extension_1.architectures.vae_arch:VAEArch"
text_encoder_2 = "core_extension_1.architectures.text_encoder_2_arch:TextEncoder2"

auraflow_vae = "core_extension_1.architectures.aura_flow_archs:AuraFlowVAEArch"
auraflow_transformer = "core_extension_1.architectures.aura_flow_archs:AuraFlowTransformer"
auraflow_text_encoder = "core_extension_1.architectures.aura_flow_archs:AuraFlowTextEncoder"

flux_transformer = "core_extension_1.architectures.flux_archs:FluxTransformer"
flux_text_encoder_1 = "core_extension_1.architectures.flux_archs:FluxTextEncoder1"
flux_text_encoder_2 = "core_extension_1.architectures.flux_archs:FluxTextEncoder2"
flux_vae = "core_extension_1.architectures.flux_archs:FluxVAEArch"

spandrel_architectures = "core_extension_1.architectures.spandrel:architectures"
briarmbg = "core_extension_1.architectures.briarmbg_arch:BriaRMBG"
ormbg = "core_extension_1.architectures.ormbg_arch:ORMBG"
isnet = "core_extension_1.architectures.isnet_arch:ISNetDIS"
# birefnet = "core_extension_1.architectures.birefnet_arch:BiRefNet"


[project.entry-points."cozy_creator.custom_nodes"]
audio_node = "core_extension_1.custom_nodes:AudioNode"
depth_map_node = "core_extension_1.custom_nodes:DepthMapNode"
image_gen_node = "core_extension_1.custom_nodes:ImageGenNode"
video_node = "core_extension_1.custom_nodes:VideoNode"
image_node = "core_extension_1.custom_nodes:ImageNode"
image_regen_node = "core_extension_1.custom_nodes:ImageRegenNode"
select_area_node = "core_extension_1.custom_nodes:SelectAreaNode"
openpose_node = "core_extension_1.custom_nodes:OpenPoseNode"


[project.entry-points."cozy_creator.api"]
get_components = "core_extension_1.api:routes"

[project.entry-points."cozy_creator.api_authenticator"]
firebase_authenticator = "core_extension_1.authenticator.firebase:FirebaseAuthenticator"
api_key_authenticator = "core_extension_1.authenticator.api_key:ApiKeyAuthenticator"

[tool.setuptools.packages.find]
where = ["src"]
include = ["core_extension_1*"]
namespaces = false

[tool.setuptools.package-data]
"core_extension_1" = ["**/*.json", "py.typed"]
