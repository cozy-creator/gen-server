[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "core-extension-1"
description = "Generative-AI server for content production"
version = "0.0.3"
authors = [
    { name = "Paul Fidika", email = "paul@fidika.com" }
]
dependencies = [
    "accelerate",
    "diffusers",
    "gen_server",
    "groundingdino-py",
    "huggingface_hub",
    "image_utils",
    "numpy",
    "Pillow",
    "requests",
    "scipy",
    "segment_anything",
    "spandrel",
    "torch",
    "tqdm",
    "transformers"
]

[project.entry-points."cozy_creator.architectures"]
sd1_text_encoder = "core_extension_1.architectures.sd1_archs:SD1TextEncoder"
sd1_unet = "core_extension_1.architectures.sd1_archs:SD1UNet"

sdxl_text_encoder_1 = "core_extension_1.architectures.sdxl_archs:SDXLTextEncoder"
sdxl_unet = "core_extension_1.architectures.sdxl_archs:SDXLUNet"

sd3_unet = "core_extension_1.architectures.sd3_archs:SD3UNet"
sd3_text_encoder_1 = "core_extension_1.architectures.sd3_archs:SD3TextEncoder1"
# sd3_text_encoder_2 = "core_extension_1.architectures.sd3_archs:SD3TextEncoder2"
sd3_text_encoder_3 = "core_extension_1.architectures.sd3_archs:SD3TextEncoder3"

vae = "core_extension_1.architectures.vae_arch:VAEArch"
text_encoder_2 = "core_extension_1.architectures.text_encoder_2_arch:TextEncoder2"

spandrel_architectures = "core_extension_1.architectures.spandrel:architectures"
briarmbg = "core_extension_1.architectures.briarmbg_arch:BriaRMBG"
ormbg = "core_extension_1.architectures.ormbg_arch:ORMBG"
isnet = "core_extension_1.architectures.isnet_arch:ISNetDIS"
# birefnet = "core_extension_1.architectures.birefnet_arch:BiRefNet"


[project.entry-points."cozy_creator.custom_nodes"]
load_checkpoint = "core_extension_1.custom_nodes:LoadCheckpoint"
load_components = "core_extension_1.custom_nodes:LoadComponents"
load_civitai = "core_extension_1.custom_nodes:LoadCivitai"
create_pipe = "core_extension_1.custom_nodes:CreatePipe"
run_pipe = "core_extension_1.custom_nodes:RunPipe"
generate_mask = "core_extension_1.custom_nodes:GenerateMaskInpainting"
inpaint_image ="core_extension_1.custom_nodes:InpaintImage"


[project.entry-points."cozy_creator.api"]
get_components = "core_extension_1.api:routes"