name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow on any version tag push (e.g., v1.0.0)

  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23']  # Specify the Go version you are using

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up environment variables for cross-compilation
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            GOOS=linux GOARCH=amd64
          elif [ ${{ matrix.os }} == 'macos-latest' ]; then
            GOOS=darwin GOARCH=amd64
          elif [ ${{ matrix.os }} == 'windows-latest' ]; then
            GOOS=windows GOARCH=amd64
          fi
          echo "GOOS=${GOOS}" >> $GITHUB_ENV
          echo "GOARCH=${GOARCH}" >> $GITHUB_ENV

      - name: Build the Go project
        run: go build -o cozy-${{ matrix.os }}-${{ env.GOARCH }} ./cmd/cozy  # Adjust the path

      - name: Create a Git tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag ${{ github.event.inputs.tag_name }}
          git push origin ${{ github.event.inputs.tag_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cozy-${{ matrix.os }}-${{ env.GOARCH }}
          path: cozy-${{ matrix.os }}-${{ env.GOARCH }}

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Release ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload binaries to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cozy-${{ matrix.os }}-${{ env.GOARCH }}
          asset_name: cozy-${{ matrix.os }}-${{ env.GOARCH }}.exe
          asset_content_type: application/octet-stream
